{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2LAMaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAGzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEQ,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC5CN,EAAc,MAMd,SACA,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAkBnBG,YAAY,uB,+BC9BXC,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAWH,GAFhD,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaXM,GAbW,4CAAF,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHFO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGTa,ECLW,SAACb,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAY,WAERxB,EAAQC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAAEpB,IASEqB,EDrBiBK,CAAc1B,GAA9BO,KAIR,OACI,qCACA,oBAAIS,UAAU,sDAAd,SAAqEhB,IAEpE,qBAAKgB,UAAU,YAAf,SAGWH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEkBpBgB,EAlCM,WAGjB,MAAoC1C,mBAAU,CAAC,cAA/C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAOA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQS,EAAWgB,KAAI,SAAAT,GAAQ,OAEtB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCnB3B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.edb86f50.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( categories =>[ inputValue,...categories ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={handleInputChange}\r\n            placeholder=\"Search Category\"\r\n            />\r\n            </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","export const getGifs= async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=20&api_key=EKWQQPfXLGICHlkUdpQf2p2mOzYzFckD`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem'; \r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images } = useFetchGifs( category );\r\n    \r\n \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounce animate__delay-2s\">{category}</h3>\r\n        \r\n         <div className=\"card-grid\">\r\n            \r\n               {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}/>\r\n                    ))\r\n                }\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( () =>{\r\n\r\n        getGifs(category)\r\n        .then( imgs =>{\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n\r\n    }, [ category ])\r\n    \r\n    /* setTimeout(() =>{\r\n       setState({\r\n        data: [1,2,3,4,5],\r\n        loading: false\r\n       });\r\n    }, 3000); */\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n   \r\n    const [categories, setCategories] = useState( ['Sharingan']);\r\n    \r\n\r\n    /* const handleAdd= () => {\r\n        setCategories(  [...categories, 'Naruto'])\r\n    } */\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                     \r\n                     <GifGrid \r\n                     key={ category }\r\n                     category={ category }/>\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}